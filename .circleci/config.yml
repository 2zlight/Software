version: 2
jobs:
    build:
     docker:
        - image: andreacensi/duckietown-xenial-kinetic:14
     parallelism: 1
     steps:
        - checkout

        - run:
            name: deps
            command: |
                pip install comptests
                ./misc/python_environment.py comptests

                pip install ros_node_utils
                pip install procgraph


        - run:
            name: build
            command: |
                # echo PWD = $PWD
                source /opt/ros/kinetic/setup.bash
                make build-catkin-parallel

        - run:
            name: make continuous-integration-tests
            command: |
                source /opt/ros/kinetic/setup.bash
                source $PWD/catkin_ws/devel/setup.bash

                export DUCKIETOWN_ROOT=$PWD
                export HOSTNAME=$HOSTNAME
                export DUCKIEFLEET_ROOT=duckiefleet
                export DUCKIETOWN_DATA=duckietown-data
                mkdir -p $DUCKIETOWN_DATA

                git clone git@github.com:duckietown/duckiefleet-fall2017.git $DUCKIEFLEET_ROOT

                make test-download-logs
                make test-circle

        - run:
            name: junit
            when: always
            command: |

                make test-comptests-collect-junit

                # export artifacts=artifacts
                # export reports=reports
                # mkdir -p $artifacts
                # mkdir -p $reports
                # .circleci/collect-test-artifacts.sh $artifacts $reports


        - run:
             name: what the duck
             command: "./what-the-duck || :"

        - run:
            name: ffmpeg
            command: |
               add-apt-repository ppa:mc3man/trusty-media
               apt-get update
               apt-get install -y  mplayer mencoder ffmpeg gstreamer0.10-ffmpeg


        - test-results-store:
                path: out/comptests/junit

        - store_artifacts:
              path: artifacts
              destination: artifacts

        - store_artifacts:
              path: reports
              destination: reports

        - store_artifacts:
              path: out
              destination: out
