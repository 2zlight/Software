#!/bin/bash

# Subnet mask from IP to slash notation
function mask2cdr {
   # Assumes there's no "255." after a non-255 byte in the mask
   local x=${1##*255.}
   set -- 0^^^128^192^224^240^248^252^254^ $(( (${#1} - ${#x})*2 )) ${x%%.*}
   x=${1%%$3*}
   echo $(( $2 + (${#x}/4) ))
}

# Subnet mask from slash to IP notation
function cdr2mask {
   # Number of args to shift, 255..255, first non-255 byte, zeroes
   set -- $(( 5 - ($1 / 8) )) 255 255 255 255 $(( (255 << (8 - ($1 % 8))) & 255 )) 0 0 0
   [ $1 -gt 1 ] && shift $1 || shift
   echo ${1-0}.${2-0}.${3-0}.${4-0}
}

# Set the argument and initialize the return code to failure
NETADDR=$1
EXIT=1

# Check the IP address with help of regex
FIRST_OCTET="^([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])"
MIDDLE="(\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){2}"
LAST_OCTET="(\.([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]))"
SUBNET="\/([0-9]|[1-2][0-9]|3[0-2])$"
REGEX=$FIRST_OCTET$MIDDLE$LAST_OCTET$SUBNET
if [[ $NETADDR =~ $REGEX ]] ; then
    # Get the subnet
    SUBNET_SLASH=${BASH_REMATCH[6]}
    cdr2mask $SUBNET_SLASH
    EXIT=0
fi

exit $EXIT
