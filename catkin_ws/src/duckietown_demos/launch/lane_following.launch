<launch>
  <!-- start basic args -->
  <arg name="veh"/>
  <arg name="config" default="baseline" />
  <arg name="param_file_name" default="default" />
  <arg name="fsm_file_name" default="default" />
  <arg name="visualization" default="true" />
  <arg name="verbose" default="true" />

  <!-- end basic args -->
 
<!-- the things that are "on" by default: 
 - camera
 - wheels
 - joystick
 - lane_following stack
 - fsm
-->

<!-- general convention on remappings is that we remap the "subscribers" -->

  <!-- start switch args -->
  <arg name="camera" default="true"/>
  <arg name="/camera/raw" default="false"/>
  <arg name="/camera/cam_info" default="true"/>

  <arg name="wheels" default="true"/>
  <arg name="/wheels/forward_kinematics" default="false"/>
  <arg name="/wheels/wheels_trim" default="true"/>

  <arg name="joystick" default="true"/>

  <arg name="lane_following" default="true"/>
  <arg name="/lane_following/line_detection" default="true"/>
  <arg name="/lane_following/ground_projection" default="true"/>
  <arg name="/lane_following/lane_filter" default="true"/>
  <arg name="/lane_following/stop_line_filter" default="true"/>
  <arg name="/lane_following/lane_controller" default="true"/>

  <arg name="fsm" default="true"/>

  <arg name="obstacle_avoidance" default="false"/>
  <arg name="/obstacle_avoidance/simple_stop" default="true"/>
  <arg name="/obstacle_avoidance/detection" default="true"/>
  <arg name="/obstacle_avoidance/safety" default="true"/>

  <arg name="vehicle_avoidance" default="false"/>
  <arg name="/vehicle_avoidance/detection" default="true" />
  <arg name="/vehicle_avoidance/filter" default="true" />
  <arg name="/vehicle_avoidance/control" default="true"/>

  <arg name="apriltags" default="false"/>
  <arg name="/apriltags/preprocessing" default="true"/>
  <arg name="/apriltags/global" default="true"/>
  <arg name="/apriltags/fast" default="false" /> <!-- default to false for fast apriltags -->
  <arg name="/apriltags/postprocessing" default="true" />

  <arg name="LED" default="false" />
  <arg name="/LED/detector" default="true" />
  <arg name="/LED/joystick" default="true" />
  <arg name="/LED/emitter"  default="true" />
  <arg name="/LED/interpreter" default="false" />

  <arg name="odometry_learning" default="false"/>
  <arg name="/odometry_learning/kinematics" default="true"/>
  <arg name="/odometry_learning/learning"  default="false"/>
  <arg name="/odometry_learning/visual_odometry" default="false"/>

  <arg name="coordination" default="false"/>

  <arg name="navigation" default="false"/>
  <arg name="/navigation/intersection_control" default="true"/>
  <arg name="/navigation/apriltags_random" default="true"/>
  <arg name="/navigation/graph_planner" default="false"/>
  <!-- NOTE: either apriltags_random or graph_planner but not both -->

  <arg name="parallel_autonomy" default="false"/>

  <arg name="global_localizer" default="false"/>

  <arg name="SLAM" default="false"/>

  <arg name="anti_instagram" default="false"/>
  <!-- end switch args -->
  

  <!-- Start Camera -->  
  <group if="$(arg camera)">
    <include  file="$(find pi_camera)/launch/camera_node.launch">
      <arg name="veh" value="$(arg veh)"/>
      <arg name="config" value="$(arg config)"/>
      <arg name="param_file_name" value="$(arg param_file_name)"/>
    </include>
    <!-- decoder_node -->
    <group if="$(arg /camera/raw)">
      <remap from="decoder_node/compressed_image" to="camera_node/image/compressed"/>
      <remap from="decoder_node/image/raw" to="camera_node/image/raw"/>
      <include file="$(find pi_camera)/launch/decoder_node.launch">
	<arg name="veh" value="$(arg veh)"/>
	<arg name="config" value="$(arg config)"/>
	<arg name="param_file_name" value="$(arg param_file_name)"/>
      </include>
    </group>
  
    <!-- cam_info_reader_node -->
    <group if="$(arg /camera/cam_info)">
      <remap from="cam_info_reader_node/camera_info" to="camera_node/camera_info"/>
      <remap from="cam_info_reader_node/compressed_image" to="camera_node/image/compressed"/>
      <include file="$(find pi_camera)/launch/cam_info_reader_node.launch"> 
	<arg name="veh" value="$(arg veh)"/>
	<arg name="config" value="$(arg config)"/>
	<arg name="param_file_name" value="$(arg param_file_name)"/>            
      </include>
    </group>
  </group>
  <!-- End Camera -->

  <!-- Start Wheels -->
  <group if="$(arg wheels)">

    <!-- TODO when Robert says so this should switch to find dagu car -->
    <remap from="inverse_kinematics_node/car_cmd" to="car_cmd_switch_node/cmd"/> 
    <include file="$(find kinematics)/launch/inverse_kinematics_node.launch">
      <arg name="veh" value="$(arg veh)"/>
    </include>
   
    <group if="$(arg /wheels/forward_kinematics)">
      <!-- TODO  remappings -->
      <include file="$(find dagu_car)/launch/forward_kinematics_node.launch">
	<arg name="veh" value="$(arg veh)"/>
      </include>
    </group>

    <!-- When Robert says so the wheels trimmer should be gone - it is totally replaced by inverse kin. -->
    <group if="$(arg /wheels/wheels_trim)">
      <!-- Wheels Trimmer -->
      <remap from="wheels_trimmer_node/wheels_cmd" to="inverse_kinematics_node/wheels_cmd"/>
      <include file="$(find dagu_car)/launch/wheels_trimmer_node.launch">
        <arg name="veh" value="$(arg veh)"/>
        <arg name="config" value="$(arg config)"/>
        <arg name="param_file_name" value="$(arg param_file_name)"/>
      </include>
    </group>

    <!-- Wheel Driver -->
    <remap from="wheels_driver_node/wheels_cmd" to="wheels_trimmer_node/trimmed_wheels_cmd" />
    <include file="$(find dagu_car)/launch/wheels_driver_node.launch">
      <arg name="veh" value="$(arg veh)"/>
    </include>

   
  </group>

  <!-- End Wheels -->

  <!-- Start Joystick -->
  <group if="$(arg joystick)">
    <!-- joy -->
    <include file="$(find joy_mapper)/launch/joy_node.launch">
        <arg name="veh" value="$(arg veh)"/>
        <arg name="config" value="$(arg config)"/>
        <arg name="param_file_name" value="$(arg param_file_name)"/>
    </include>

    <!-- joy_mapper -->
    <include file="$(find joy_mapper)/launch/joy_mapper_node.launch">
        <arg name="veh" value="$(arg veh)"/>
        <arg name="config" value="$(arg config)"/>
        <arg name="param_file_name" value="$(arg param_file_name)"/>
    </include>
  </group>
  <!-- End Joystick -->

  <!-- Start FSM -->
  <group if="$(arg fsm)">
    <!-- FSM -->
    <!-- no remapping for FSM - full topic names specified in params yaml -->
    <include file="$(find fsm)/launch/fsm_node.launch">
      <arg name="veh" value="$(arg veh)"/>        
      <arg name="config" value="$(arg config)"/>        
      <arg name="param_file_name" value="$(arg fsm_file_name)"/>        
    </include>

    <!-- car_cmd_switch_node -->
    <!-- no remappings for car_cmd_switch - full topic names specified in params yaml -->
    <remap from="car_cmd_switch_node/cmd_lane_following" to="lane_controller_node/lane_control"/> <!-- need either lots more of these or none of these -->
    <include file="$(find dagu_car)/launch/car_cmd_switch_node.launch">
        <arg name="veh" value="$(arg veh)"/>
        <arg name="config" value="$(arg config)"/>
        <arg name="param_file_name" value="$(arg param_file_name)"/>
    </include>
  </group>

  <!--End FSM -->

  <!-- Start Lane Following -->
  <group if="$(arg lane_following)">

    <!-- Line Detector -->
    <group if="$(arg /lane_following/line_detection)">
      <remap from="line_detector_node/image" to="camera_node/image/compressed"/>
      <include file="$(find line_detector)/launch/line_detector_node.launch">
	<arg name="veh" value="$(arg veh)"/>
	<arg name="config" value="$(arg config)"/>
	<arg name="param_file_name" value="$(arg param_file_name)"/>
        <arg name="verbose" value="$(arg verbose)" />
      </include>	
    </group>
    
    <!-- Ground projection -->
    <group if="$(arg /lane_following/ground_projection)">
      <include file="$(find ground_projection)/launch/ground_projection.launch">
	<arg name="veh" value="$(arg veh)"/>
	<arg name="config" value="$(arg config)"/>
	<arg name="param_file_name" value="$(arg param_file_name)"/>
      </include>
    </group>
	
    <!-- Lane Filter -->
    <group if="$(arg /lane_following/lane_filter)">
      <remap from="lane_filter_node/segment_list" to="ground_projection/lineseglist_out"/>
      <include file="$(find lane_filter)/launch/lane_filter_node.launch">
	<arg name="veh" value="$(arg veh)"/>
	<arg name="config" value="$(arg config)"/>
	<arg name="param_file_name" value="$(arg param_file_name)"/>
      </include>
    </group>

    <!-- Stop Line Filter -->
    <group if="$(arg /lane_following/stop_line_filter)">      
      <remap from="stop_line_filter_node/lanewidth" to="lane_filter_node/lanewidth"/>
      <remap from="stop_line_filter_node/lane_pose" to="lane_filter_node/lane_pose"/>
      <remap from="stop_line_filter_node/segment_list" to="ground_projection/lineseglist_out"/>
      <include file="$(find stop_line_filter)/launch/stop_line_filter_node.launch">
	<arg name="veh" value="$(arg veh)"/>
	<arg name="config" value="$(arg config)"/>
	<arg name="param_file_name" value="$(arg param_file_name)"/>
      </include>
    </group>

    <!-- Lane controller -->
    <group if="$(arg /lane_following/lane_controller)">
      <remap from="lane_controller_node/lane_pose" to="lane_filter_node/lane_pose"/>
      <include file="$(find lane_control)/launch/lane_controller_node.launch">
        <arg name="veh" value="$(arg veh)"/>
        <arg name="config" value="$(arg config)"/>
        <arg name="param_file_name" value="$(arg param_file_name)"/>        
      </include>
    </group>

    <!-- Visualization -->
    <group if="$(arg visualization)">
      <include file="$(find lane_filter)/launch/lane_pose_visualizer_node.launch">
	<arg name="veh" value="$(arg veh)"/>		
      </include>
    </group>

  </group>
  <!-- End Lane Control -->

</launch>
