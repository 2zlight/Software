#!/usr/bin/env python
import time
from rgb_led import RGB_LED, LED
from math import sin, cos


def cycle_LEDs_fancy2(speed=1):
    led = RGB_LED()

    def get_config(t):
        slow = 0.00005*t
        a = []
        for i in range(15):
            period = speed * (sin(i) + 0.00001 * cos(slow+i))
            x = 0.5 + 0.5 * cos(t * period)
            a.append(x)

        # nonlinear
        f = lambda x : x*x*x *0.9 + 0
        s = sum([f(x) for x in a])
        a = [f(x)/s for x in a]
        return {
            LED.TOP: [a[0], a[1], a[2]],
            LED.BACK_LEFT: [a[3],a[4],a[5]],
            LED.BACK_RIGHT: [a[6],a[7],a[8]],
            LED.FRONT_LEFT: [a[9],a[10],a[11]],
            LED.FRONT_RIGHT: [a[12],a[13],a[14]],
        }

    while True:
        t = time.time()
        config = get_config(t)
        for name, col in config.items():
            k = RGB_LED.PORT_MAPPING[name]
            led.setRGB(k, col)
        time.sleep(0.01)


if __name__ == '__main__':
    cycle_LEDs_fancy2()
